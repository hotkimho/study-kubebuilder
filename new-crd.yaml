apiVersion: v1
kind: EventTrigger
metadata:
  name: event-trigger
spec:
  suspend: boolean # 트리거 일시 정지
  repeatable: boolean # 알림을 한번 전송 후, 다시 보낼것인지 유무
  minDelaySeconds: # 한번 알람이 보내진 후, 설정된 초 이후로 알람을 보장 (status의 마지막 전송 시간을 기준으로 계산)

  resource:
    scope: cluster / namespace # (필수값) (기본값은 namespace)
    namespace: ns # (옵션값) scope가 namespace임에도 입력이 안되면 default로 설정
    apiVersion: v1 # (필수값)
    kind: kind # (필수값)
    name: resource-name # (옵션값) 없으면 해당 리소스 전체
    ## 웹훅에서 잘못된 kind 또는 지원하지 않는 경우 처리

    labelSelector:
      key: key
      operator: equal / in / notIn
      values: [ ]  # 비어 있으면 key에 해당하는 모든 리소스에 대하여 opertator(!제외) 상관없이 다 조회
    annotationSelector:
      key: key
      operator: equal / in / notIn
      values: [ ]  # 비어 있으면 key에 해당하는 모든 리소스에 대하여 opertator(!제외) 상관없이 다 조회

  rule:
  - jsonPath: { jsonpath } (필수값)
    matchExpression: <정규표현식>
    value: # (필수값)

  message:
    level: info/warning/error  #(필수값)
    message: message # 매터모스트 본문 내용 or 메일 본문 내용
    # 메시지의 내용에는 리소스의 정보들이 포함됨
  receiver:
  - gmail:
      smtpServer: smtp-server
      smtpPort: 587
      username: userEmail
      password: userPassword
      fromAddress: fromuser@mantech.co.kr
      toAddress: touser@mantech.co.kr
      subject: 제목
      message: 메일 내용(리소스에 대한 에러 정보가 포함됨)
  - mattermost:
      url: mattermost-webhook-url


status:
  phase: Running # 트리거가 동작중인지 멈춰있는지(이건 필요한지 확인)
  resources: # 각각의 리소스에 대한 정보
  - name: resource-name
    uid: resource-uid
    repotred: 전송 여부

  receverss: # 매타모스트나, 구글에 요청을 보내고 받은 응답
  - code: response-code
    message: error-message



